@page "/"
@using MSPApplication.Shared
@using MSPApplication.UI.Services

<div class="row">
    <div class="col-md-8">
        <h1 class="page-title">Welcome to Human Resource Sample Application</h1>
    </div>
</div>
<br />

<div class="row">
    <div class="col-md-8">
        <NewsWidget  />

        <div id="tasks" class="widget">
            <h3>Tasks<button type="submit" @onclick="AddTask" class="btn btn-primary edit-btn float-right">Add Task</button></h3>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Title</th>
                        <th scope="col">Description</th>
                        <th scope="col">Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var task in Tasks)
                    {
                        <tr>
                            <td>@task.Title</td>
                            <td>@task.Description</td>
                            <td>@task.Status</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>

    <div class="col-md-4">
        <NewEmployeesWidget HowManyToReturn="1" />

        <div id="reportConcern" class="widget">
            <h3>Report a Concern</h3>
            <p>It's simple, safe and anonymous.</p>

            @if (!EmailSent)
            {
                <EditForm Model="@NewConcern" OnValidSubmit="SubmitConcern">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label for="title">Title: </label>
                        <InputText id="title" class="form-control" @bind-Value="@NewConcern.Title" placeholder="Enter title"></InputText>
                        <ValidationMessage For="@(() => NewConcern.Title)" />
                    </div>

                    <div class="form-group">
                        <label for="title">Description: </label>
                        <InputTextArea id="title" class="form-control" @bind-Value="@NewConcern.Description" placeholder="Enter title"></InputTextArea>
                        <ValidationMessage For="@(() => NewConcern.Description)" />
                    </div>

                    <button type="submit" class="btn btn-primary edit-btn">Submit</button>
                </EditForm>
            }
            else
            {
                <p>Your message has been sent! You should receive a response from HR within 24 hours.</p>
                <button type="button" @onclick="ResetForm" class="btn btn-primary edit-btn">Send Another</button>
            }
        </div>
    </div>
</div>
@code {

    public Concern NewConcern { get; set; } = new Concern();

    public bool EmailSent { get; set; } = false;

    [Inject]
    public IEmailService emailSerivce { get; set; }

    [Inject]
    public ITaskDataService taskService { get; set; }

    [Inject]
    public NavigationManager navManager { get; set; }

    public List<HRTask> Tasks { get; set; } = new List<HRTask>();

    protected override async Task OnInitializedAsync()
    {
        Tasks = (await taskService.GetAllTasks()).ToList();
    }

    public void AddTask()
    {
        navManager.NavigateTo("taskedit");
    }

    public void SubmitConcern()
    {
        var newEmail = new Email()
        {
            Body = NewConcern.Description,
            Subject = NewConcern.Title
        };

        emailSerivce.SendEmail(newEmail);
        EmailSent = true;
    }

    public void ResetForm()
    {
        NewConcern = new Concern();
        EmailSent = false;
    }
}