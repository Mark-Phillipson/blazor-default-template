
@page "/survey/{SurveyId}"

@using MSPApplication.Shared
@using MSPApplication.UI.Services

<div class="entity-edit">
    @if (Survey == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="row">
            <div class="col-sm-12">
                <h1 class="page-title">Survey Details</h1>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-xs-12 col-sm-6">
                <div class="card">
                    <div class="card-header">
                        Question and Description
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@Survey.Title</h5>
                        <p class="card-text">@Survey.Description</p>
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-6">
                <div class="card">
                    <div class="card-header">
                        Quick Stats
                    </div>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">Average Rating: @AverageRating</li>
                        <li class="list-group-item">Highest Rating: @HighestRating</li>
                        <li class="list-group-item">Lowest Rating: @LowestRating</li>
                        <li class="list-group-item">Number of Responses: @Count</li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <br />
                <h3>Answers</h3>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Response</th>
                            <th>Rating</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var answer in Survey.Answers)
                        {
                            <tr>
                                <td>@answer.AnswerId</td>
                                <td>@answer.Response</td>
                                <td>@answer.Rating</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>


@code {
    [Inject]
    private ISurveyDataService surveyService { get; set; }

    [Parameter]
    public string SurveyId { get; set; }

    public double AverageRating { get; set; }

    public double LowestRating { get; set; }

    public double HighestRating { get; set; }
    
    public double Count { get; set; }

    public Survey Survey { get; set; } = new Survey() { Answers = new List<Answer>() };

    protected override async Task OnInitializedAsync()
    {
        Survey = await surveyService.GetSurveyById(int.Parse(SurveyId));

        if (Survey.Answers == null)
        {
            Survey.Answers = new List<Answer>();
        }

        if (Survey.Answers.Count > 0)
        {
            AverageRating = Survey.Answers.Select(x => x.Rating).Sum() / Survey.Answers.Count;

            HighestRating = Survey.Answers.OrderByDescending(x => x.Rating).FirstOrDefault().Rating;

            LowestRating = Survey.Answers.OrderBy(x => x.Rating).FirstOrDefault().Rating;

            Count = Survey.Answers.Count;
        }
    }
}
